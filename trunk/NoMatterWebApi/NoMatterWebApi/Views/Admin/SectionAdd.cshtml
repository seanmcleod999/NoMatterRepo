@model NoMatterWebApiModels.ViewModels.AddEditSectionVm

@{
    ViewBag.Title = "Section Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/ckeditor/ckeditor.js"></script>
<script>
    CKEDITOR.env.isCompatible = true;
   
     $(function () {  
         CKEDITOR.config.height = 100;
     });
</script>

<h1>Add Section</h1>

<div class="PageNavigationBar">
    @Html.ActionLink("back to sections", "Sections", "Admin", new {clientId = @Model.Section.Client.ClientUuid}, new { @class = "BackLink" })
</div>

@using (Html.BeginForm("SectionAdd", "Admin", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Section.Client.ClientUuid)
    @Html.HiddenFor(model => model.Section.SectionId)

   
    <div class="editor-label">
        Title
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Section.SectionName, new {style = "width:100%;"})
        @Html.ValidationMessageFor(model => model.Section.SectionName)
    </div>
    
     <div class="editor-label">
        Description
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Section.SectionDescription, new {style = "width:100%;"})
        @Html.ValidationMessageFor(model => model.Section.SectionDescription)
        <script>
            CKEDITOR.replace('Section_SectionDescription');
        </script>
    </div>
    
    <div class="editor-label">
        Order
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Section.SectionOrder, new {style = "width:100px;"})
        @Html.ValidationMessageFor(model => model.Section.SectionOrder)
    </div>
    
     <div class="editor-label">
        Hidden
    </div>
    <div class="editor-field">
        @Html.CheckBoxFor(model => model.Section.Hidden)
        @Html.ValidationMessageFor(model => model.Section.Hidden)
    </div>
    
     <div class="editor-label">
        Picture
    </div>
    <div class="editor-field">
         @Html.TextBoxFor(m => m.Picture, new { type = "file", @class="form-control"})
         @Html.ValidationMessageFor(m => m.Picture)
    </div>
   

    <br/>
    <p>
        <input type="submit" value="Save" class="btn btn-default" /> &nbsp;@Html.ActionLink("cancel", "Sections", "Admin", new { clientId = Model.Section.Client.ClientUuid }, new { onclick = "return confirm('Are you sure you wish to cancel? Note that all unsaved information will be lost.');" })
    </p>

}


